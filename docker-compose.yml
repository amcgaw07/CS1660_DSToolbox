version: "3.8"
services:
  web:
    build: .
    ports:
      - "5000:5000"
    volumes:
      - .:/code
    environment:
      FLASK_ENV: development
  jupyter:
    image: "jupyter/base-notebook"
    ports:
      - "8888:8888"
    environment:
      - JUPYTER_TOKEN=easy
  rstudio:
    image: "rocker/rstudio"
    ports:
      - "8787:8787"
    environment:
      - DISABLE_AUTH=true
  wetty:
    image: amcgaw07/wettygit:firsttry
    ports:
      - "3000:3000"
    volumes:
      - .:/code
  markdown:
    image: "v4tech/markdown-editor"
    ports:
      - "12345:80"
  sonarqube:
    image: "sonarqube:latest"
    ports:
      - "9001:9000"
    environment:
      - SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true
    networks:
      - sonarqube
  tensorflow:
    image: "tensorflow/tensorflow:nightly-jupyter"
    ports:
      - "8889:8888"
    environment:
      - JUPYTER_TOKEN=easy
  sonarscan:
    image: "newtmitch/sonar-scanner"
    restart: on-failure
    volumes:
      - ./sample:/usr/src
    networks:
      - sonarqube
  ##importing hadoop cluster files for running hadoop
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode
    restart: always
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - ./hadoop.env
  
  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    container_name: resourcemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864"
    env_file:
      - ./hadoop.env

  nodemanager1:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    container_name: nodemanager
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    env_file:
      - ./hadoop.env
  
  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    container_name: historyserver
    restart: always
    environment:
      SERVICE_PRECONDITION: "namenode:9000 namenode:9870 datanode:9864 resourcemanager:8088"
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env
networks:
  sonarqube:
volumes:
  hadoop_namenode:
  hadoop_datanode:
  hadoop_historyserver:
  guacamole_share1: